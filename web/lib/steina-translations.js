(function() {
  if (Blockly.ScratchMsgs.locales === undefined) {
    throw new Error("Unable to load Steina translations. Blockly.ScratchMsgs.locales is undefined");
  }

  var translations = {
    en: {
      'CATEGORY_AUDIO' : 'Audio',
      'CATEGORY_EFFECTS' : 'Effects',
      'CATEGORY_DEVICE' : 'Device',
      'CATEGORY_MESSAGES' : 'Messages',
      'steina.video.playEntireVideoUntilDone' : 'play from start to end',
      'steina.video.playVideoFromAToB' : 'play from [MARKER_A] to [MARKER_B]',
      'steina.video.playForwardReverseUntilDone' : 'play [DIRECTION]',
      'steina.video.startPlayingForwardReverse' : 'start playing [DIRECTION]',
      'steina.video.startPlaying' : 'start playing video',
      'steina.video.stopPlaying' : 'stop playing',
      'steina.video.goToFrame' : 'jump to frame [FRAME]',
      'steina.video.playNFrames' : 'play [FRAMES] frames until done',
      'steina.video.playForwardUntilDone' : 'play forward until done',
      'steina.video.playBackwardUntilDone' : 'play backward until done',
      'steina.video.nextFrame' : 'go to next frame',
      'steina.video.previousFrame' : 'go to previous frame',
      'steina.video.changeEffectBy' : 'change [EFFECT] effect by [CHANGE]',
      'steina.video.setEffectTo' : 'set [EFFECT] effect to [VALUE]',
      'steina.video.clearVideoEffects' : 'clear video effects',
      'steina.video.whenReached' : 'when I reach [MARKER]',
      'steina.video.whenPlayedToEnd' : 'when played to end',
      'steina.video.whenPlayedToBeginning' : 'when played to beginning',
      'steina.video.whenTapped' : 'when tapped',
      'steina.video.getCurrentFrame' : 'current frame',
      'steina.video.getTotalFrames' : 'total frames',
      'steina.video.isTapped' : 'tapped?',
      'steina.audio.startSound' : 'start sound',
      'steina.audio.playSound' : 'play sound until done',
      'steina.audio.startSoundFromAToB' : 'start sound from [MARKER_A] to [MARKER_B]',
      'steina.audio.playSoundFromAToB' : 'play sound from [MARKER_A] to [MARKER_B] until done',
      'steina.video.setVolumeTo' : 'set volume to [VALUE]',
      'steina.video.changeVolumeBy' : 'change volume by [VALUE]',
      'steina.audio.getVolume' : 'volume',
      'steina.video.setPlayRate' : 'set play rate to [RATE] %',
      'steina.video.changeRateBy' : 'change play rate by [RATE]',
      'steina.audio.getPlayRate' : 'play rate',
      'steina.motion.whenTilted' : 'when tilted [DIRECTION]',
      'steina.motion.isTilted' : 'tilted [DIRECTION]?',
      'steina.motion.tiltAngle' : 'tilt angle [DIRECTION]',
      'steina.motion.whenPointed' : 'when pointed toward [DIRECTION]',
      'steina.motion.isPointed' : 'pointed [DIRECTION]?',
      'steina.motion.compassAngle' : 'compass angle',
      'steina.video.videoDirectionMenu.forward' : 'forward',
      'steina.video.videoDirectionMenu.reverse' : 'in reverse',
      'steina.video.effectsMenu.color' : 'color',
      'steina.video.effectsMenu.whirl' : 'whirl',
      'steina.video.effectsMenu.brightness' : 'brightness',
      'steina.video.effectsMenu.ghost' : 'ghost',
      'steina.tiltDirectionMenu.right' : 'right',
      'steina.tiltDirectionMenu.left' : 'left',
      'steina.tiltDirectionMenu.front' : 'forward',
      'steina.tiltDirectionMenu.back' : 'backward',
      'steina.cardinalDirectionMenu.north' : 'north',
      'steina.cardinalDirectionMenu.east' : 'east',
      'steina.cardinalDirectionMenu.south' : 'south',
      'steina.cardinalDirectionMenu.back' : 'west',
      'steina.markersMenu.start' : 'start',
      'steina.markersMenu.end' : 'end'
    },
    it: {
      'CATEGORY_AUDIO' : 'Audio',
      'CATEGORY_EFFECTS' : 'Effetti',
      'CATEGORY_DEVICE' : 'Dispositivo',
      'CATEGORY_MESSAGES' : 'Messaggi',
      'steina.video.playEntireVideoUntilDone' : 'riproduci dall\'inizio alla fine',
      'steina.video.playVideoFromAToB' : 'riproduci da [MARKER_A] a [MARKER_B]',
      'steina.video.playForwardReverseUntilDone' : 'riproduci [DIRECTION]',
      'steina.video.startPlayingForwardReverse' : 'avvia riproduzione [DIRECTION]',
      'steina.video.startPlaying' : 'avvia riproduzione',
      'steina.video.stopPlaying' : 'ferma riproduzione',
      'steina.video.goToFrame' : 'salta a fotogramma [FRAME]',
      'steina.video.playNFrames' : 'riproduci [FRAMES] fotogrammi e attendi la fine',
      'steina.video.playForwardUntilDone' : 'riproduci in avanti e attendi la fine',
      'steina.video.playBackwardUntilDone' : 'riproduci al contrario e attendi la fine',
      'steina.video.nextFrame' : 'salta al fotogramma successivo',
      'steina.video.previousFrame' : 'salta al fotogramma precedente',
      'steina.video.changeEffectBy' : 'cambia effetto [EFFECT] di [CHANGE]',
      'steina.video.setEffectTo' : 'porta effetto [EFFECT] a [VALUE]',
      'steina.video.clearVideoEffects' : 'rimuovi effetti',
      'steina.video.whenReached' : 'quando raggiungo [MARKER]',
      'steina.video.whenPlayedToEnd' : 'quando raggiungo la fine',
      'steina.video.whenPlayedToBeginning' : 'quando raggiungo l\'inizio',
      'steina.video.whenTapped' : 'quando viene toccato',
      'steina.video.getCurrentFrame' : 'fotogramma attuale',
      'steina.video.getTotalFrames' : 'fotogrammi totali',
      'steina.video.isTapped' : 'toccato?',
      'steina.audio.startSound' : 'avvia riproduzione suono',
      'steina.audio.playSound' : 'riproduci suono e attendi la fine',
      'steina.audio.startSoundFromAToB' : 'avvia riproduzione suono da [MARKER_A] a [MARKER_B]',
      'steina.audio.playSoundFromAToB' : 'riproduci suono da [MARKER_A] a [MARKER_B] e attendi la fine',
      'steina.video.setVolumeTo' : 'porta volume a [VALUE] %',
      'steina.video.changeVolumeBy' : 'cambia volume di [VALUE]',
      'steina.audio.getVolume' : 'volume',
      'steina.video.setPlayRate' : 'porta la velocità a [RATE] %',
      'steina.video.changeRateBy' : 'cambia la velocità di [RATE]',
      'steina.audio.getPlayRate' : 'velocità',
      'steina.motion.whenTilted' : 'quando inclinato [DIRECTION]',
      'steina.motion.isTilted' : 'inclinato [DIRECTION]?',
      'steina.motion.tiltAngle' : 'angolo di inclinazione [DIRECTION]',
      'steina.motion.whenPointed' : 'quando punta verso [DIRECTION]',
      'steina.motion.isPointed' : 'punta verso [DIRECTION]?',
      'steina.motion.compassAngle' : 'angolo della bussola',
      'steina.video.videoDirectionMenu.forward' : 'in avanti',
      'steina.video.videoDirectionMenu.reverse' : 'al contrario',
      'steina.video.effectsMenu.color' : 'colore',
      'steina.video.effectsMenu.whirl' : 'mulinello',
      'steina.video.effectsMenu.brightness' : 'luminosità',
      'steina.video.effectsMenu.ghost' : 'fantasma',
      'steina.tiltDirectionMenu.right' : 'destra',
      'steina.tiltDirectionMenu.left' : 'sinistra',
      'steina.tiltDirectionMenu.front' : 'avanti',
      'steina.tiltDirectionMenu.back' : 'indietro',
      'steina.cardinalDirectionMenu.north' : 'nord',
      'steina.cardinalDirectionMenu.east' : 'est',
      'steina.cardinalDirectionMenu.south' : 'sud',
      'steina.cardinalDirectionMenu.back' : 'ovest',
      'steina.markersMenu.start' : 'inizio',
      'steina.markersMenu.end' : 'fine'
    }
  }

  for (locale in translations) {
    Object.assign(Blockly.ScratchMsgs.locales[locale], translations[locale]);
  }

})()